<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace对应接口全类名 -->
<mapper namespace="usts.pycro.mybatis.mapper.EmpMapper">

    <!--
     resultMap：设置自定义映射关系
     id：唯一标识
     type：设置映射关系中的实体类类型
     子标签：
     id：设置主键的映射关系
     result：设置普通字段的映射关系
     属性：
     property：设置映射关系中的属性名，必须是type属性所设置的实体类类型中的属性名
     column：设置映射关系中的字段名，必须是sql语句查询出的字段名
     -->
    <resultMap id="empResMap" type="emp">
        <id property="empId" column="emp_id"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="gender" column="gender"/>
        <result property="email" column="email"/>
    </resultMap>

    <select id="listAllEmp" resultMap="empResMap">
        select *
        from t_emp;
    </select>

    <!-- <select id="listAllEmpOld" resultType="Emp"> -->
    <!--     select * -->
    <!--     from t_emp -->
    <!-- </select> -->
    <!--
     处理多对一映射关系的方式①：级联属性赋值
     -->
    <resultMap id="empAndDeptResMap1" type="emp">
        <id property="empId" column="emp_id"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="email" column="email"/>
        <result property="gender" column="gender"/>
        <result property="dept.deptId" column="dept_id"/>
        <result property="dept.deptName" column="dept_name"/>
    </resultMap>
    <!--
     处理多对一映射关系的方式②：association
     -->
    <resultMap id="empAndDeptResMap2" type="emp">
        <id property="empId" column="emp_id"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="email" column="email"/>
        <result property="gender" column="gender"/>
        <!--
         association：处理多对一的映射关系
         property：需要处理多对一的映射关系的属性名
         javaType：该属性的类型
         -->
        <association property="dept" javaType="Dept">
            <id property="deptId" column="dept_id"/>
            <result property="deptName" column="dept_name"/>
        </association>
    </resultMap>
    <select id="getEmpAndDept" resultMap="empAndDeptResMap2">
        select *
        from t_emp e
                 left join t_dept d on e.dept_id = d.dept_id
        where e.emp_id = #{empId}
    </select>
    <!--
     处理多对一映射关系的方式③：分步查询，在resultMap里进行子查询
     -->
    <resultMap id="empAndDeptResMapByStep" type="emp">
        <id property="empId" column="emp_id"/>
        <result property="empName" column="emp_name"/>
        <result property="age" column="age"/>
        <result property="email" column="email"/>
        <result property="gender" column="gender"/>
        <!--
         association：处理多对一的映射关系
         property：需要处理多对一的映射关系的属性名
         select：分步查询的sql的唯一标识：namesapce.SQLid 或 全类名.方法名
         column：设置分布查询的条件（表中的字段名）
         fetchType:当开启了全局的延迟加载之后，可通过此属性手动控制延迟加载的效果
         fetchType="Lazy|eager" :Lazy表示延迟加载，eager表示立即加载
         -->
        <association property="dept"
                     select="usts.pycro.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     column="dept_id"
                     fetchType="lazy"/>
    </resultMap>
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptResMapByStep">
        select *
        from t_emp
        where emp_id = #{empId}
    </select>
    <select id="getDeptAndEmpByStepTwo" resultType="emp">
        select *
        from t_emp
        where dept_id = #{deptId}
    </select>
</mapper>